{"ast":null,"code":"var _jsxFileName = \"/Users/clairemuller/Dev/ReactMineSweeper/src/components/Timer.js\";\nimport React from 'react';\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.startTimer = () => {\n      let time = 0;\n      this.interval = setInterval(() => {\n        this.setState({\n          time\n        });\n        time++;\n      }, 1000);\n    };\n\n    this.state = {\n      time: 0\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.active && this.props.active) {\n      this.startTimer();\n    } else if (!prevProps.active) {\n      clearInterval(this.interval);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \" Time: \", this.state.time, \" \");\n  }\n\n}\n\nexport default Timer;","map":{"version":3,"sources":["/Users/clairemuller/Dev/ReactMineSweeper/src/components/Timer.js"],"names":["React","Timer","Component","constructor","props","startTimer","time","interval","setInterval","setState","state","componentDidUpdate","prevProps","active","clearInterval","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAenBC,UAfmB,GAeN,MAAM;AACjB,UAAIC,IAAI,GAAG,CAAX;AACA,WAAKC,QAAL,GAAgBC,WAAW,CAAC,MAAM;AAChC,aAAKC,QAAL,CAAc;AACZH,UAAAA;AADY,SAAd;AAGAA,QAAAA,IAAI;AACL,OAL0B,EAKxB,IALwB,CAA3B;AAMD,KAvBkB;;AAEjB,SAAKI,KAAL,GAAa;AACXJ,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAEDK,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAI,CAACA,SAAS,CAACC,MAAX,IAAqB,KAAKT,KAAL,CAAWS,MAApC,EAA4C;AAC1C,WAAKR,UAAL;AACD,KAFD,MAEO,IAAI,CAACO,SAAS,CAACC,MAAf,EAAsB;AAC3BC,MAAAA,aAAa,CAAC,KAAKP,QAAN,CAAb;AACD;AACF;;AAYDQ,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,KAAKL,KAAL,CAAWJ,IADX,MADF;AAKD;;AAhCiC;;AAkCpC,eAAeL,KAAf","sourcesContent":["import React from 'react'\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      time: 0,\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.active && this.props.active) {\n      this.startTimer()\n    } else if (!prevProps.active){\n      clearInterval(this.interval)\n    }\n  }\n\n  startTimer = () => {\n    let time = 0\n    this.interval = setInterval(() => {\n      this.setState({\n        time\n      })\n      time++;\n    }, 1000)\n  }\n\n  render() {\n    return (\n      <div > Time: {\n      this.state.time\n    } < /div>\n  )\n  }\n}\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}