{"ast":null,"code":"var _jsxFileName = \"/Users/clairemuller/Dev/ReactMineSweeper/src/components/Timer.js\";\nimport React from 'react';\n\nclass Timer extends React.Component {\n  constructor() {\n    super();\n\n    this.startTimer = () => {\n      let time = 0;\n      let interval = setInterval(() => {\n        this.setState({\n          time\n        });\n        time++;\n      }, 1000);\n    };\n\n    this.state = {\n      time: 0\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.active !== this.props.active) {\n      this.startTimer();\n    } else {}\n  } //     let intervalId = setInterval(timer, 10000);\n  // clearInterval(intervalId);\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Time: \", this.state.time);\n  } // handleClick = () => {\n  //     this.setState(state => {\n  //         if (state.status) {\n  //             clearInterval(this.timer);\n  //         } else {\n  //             const startTime = Date.now() - this.state.runningTime;\n  //             this.timer = setInterval(() => {\n  //                 this.setState({ runningTime: Date.now() - startTime });\n  //             });\n  //         }\n  //         return { status: !state.status };\n  //     });\n  // };\n  // handleReset = () => {\n  //     this.setState({ runningTime: 0, status: false });\n  // };\n\n\n}\n\nexport default Timer;","map":{"version":3,"sources":["/Users/clairemuller/Dev/ReactMineSweeper/src/components/Timer.js"],"names":["React","Timer","Component","constructor","startTimer","time","interval","setInterval","setState","state","componentDidUpdate","prevProps","active","props","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,GAAG;AACV;;AADU,SAoBdC,UApBc,GAoBD,MAAM;AACf,UAAIC,IAAI,GAAG,CAAX;AACA,UAAIC,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC7B,aAAKC,QAAL,CAAc;AACVH,UAAAA;AADU,SAAd;AAGAA,QAAAA,IAAI;AACP,OALyB,EAKvB,IALuB,CAA1B;AAOH,KA7Ba;;AAEV,SAAKI,KAAL,GAAa;AACTJ,MAAAA,IAAI,EAAE;AADG,KAAb;AAGH;;AAEDK,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAE1B,QAAIA,SAAS,CAACC,MAAV,KAAqB,KAAKC,KAAL,CAAWD,MAApC,EAA4C;AACxC,WAAKR,UAAL;AAEH,KAHD,MAGO,CAEN;AACJ,GAhB+B,CAkBhC;AACA;;;AAaAU,EAAAA,MAAM,GAAG;AACL,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAY,KAAKL,KAAL,CAAWJ,IAAvB,CAAP;AACH,GAlC+B,CAoChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAnDgC;;AAwDpC,eAAeJ,KAAf","sourcesContent":["import React from 'react'\n\nclass Timer extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            time: 0,\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n\n        if (prevProps.active !== this.props.active) {\n            this.startTimer()\n\n        } else {\n\n        }\n    }\n\n    //     let intervalId = setInterval(timer, 10000);\n    // clearInterval(intervalId);\n\n    startTimer = () => {\n        let time = 0\n        let interval = setInterval(() => {\n            this.setState({\n                time\n            })\n            time++;\n        }, 1000)\n\n    }\n\n    render() {\n        return <div>Time: {this.state.time}</div>\n    }\n\n    // handleClick = () => {\n    //     this.setState(state => {\n    //         if (state.status) {\n    //             clearInterval(this.timer);\n    //         } else {\n    //             const startTime = Date.now() - this.state.runningTime;\n    //             this.timer = setInterval(() => {\n    //                 this.setState({ runningTime: Date.now() - startTime });\n    //             });\n    //         }\n    //         return { status: !state.status };\n    //     });\n    // };\n    // handleReset = () => {\n    //     this.setState({ runningTime: 0, status: false });\n    // };\n\n\n\n}\nexport default Timer;"]},"metadata":{},"sourceType":"module"}