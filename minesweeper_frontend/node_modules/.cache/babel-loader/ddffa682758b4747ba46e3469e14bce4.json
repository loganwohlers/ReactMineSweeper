{"ast":null,"code":"var _jsxFileName = \"/Users/clairemuller/Dev/ReactMineSweeper/src/components/Timer.js\";\nimport React from 'react';\n\nclass Timer extends React.Component {\n  constructor() {\n    super();\n\n    this.startTimer = () => {\n      let time = 0;\n      this.interval = setInterval(() => {\n        this.setState({\n          time\n        });\n        time++;\n      }, 1000);\n    };\n\n    this.handleClick = () => {\n      this.setState(state => {\n        if (state.status) {\n          clearInterval(this.timer);\n        } else {\n          const startTime = Date.now() - this.state.runningTime;\n          this.timer = setInterval(() => {\n            this.setState({\n              runningTime: Date.now() - startTime\n            });\n          });\n        }\n\n        return {\n          status: !state.status\n        };\n      });\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        runningTime: 0,\n        status: false\n      });\n    };\n\n    this.state = {\n      time: 0\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.active !== this.props.active) {\n      this.startTimer();\n    } else if (!prevProps.active) {\n      clearInterval(this.interval);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \" Time: \", this.state.time, \" \");\n  }\n\n}\n\nexport default Timer;","map":{"version":3,"sources":["/Users/clairemuller/Dev/ReactMineSweeper/src/components/Timer.js"],"names":["React","Timer","Component","constructor","startTimer","time","interval","setInterval","setState","handleClick","state","status","clearInterval","timer","startTime","Date","now","runningTime","handleReset","componentDidUpdate","prevProps","active","props","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAiBdC,UAjBc,GAiBD,MAAM;AACjB,UAAIC,IAAI,GAAG,CAAX;AACA,WAAKC,QAAL,GAAgBC,WAAW,CAAC,MAAM;AAChC,aAAKC,QAAL,CAAc;AACZH,UAAAA;AADY,SAAd;AAGAA,QAAAA,IAAI;AACL,OAL0B,EAKxB,IALwB,CAA3B;AAOD,KA1Ba;;AAAA,SAkCdI,WAlCc,GAkCA,MAAM;AAClB,WAAKD,QAAL,CAAcE,KAAK,IAAI;AACrB,YAAIA,KAAK,CAACC,MAAV,EAAkB;AAChBC,UAAAA,aAAa,CAAC,KAAKC,KAAN,CAAb;AACD,SAFD,MAEO;AACL,gBAAMC,SAAS,GAAGC,IAAI,CAACC,GAAL,KAAa,KAAKN,KAAL,CAAWO,WAA1C;AACA,eAAKJ,KAAL,GAAaN,WAAW,CAAC,MAAM;AAC7B,iBAAKC,QAAL,CAAc;AACZS,cAAAA,WAAW,EAAEF,IAAI,CAACC,GAAL,KAAaF;AADd,aAAd;AAGD,WAJuB,CAAxB;AAKD;;AACD,eAAO;AACLH,UAAAA,MAAM,EAAE,CAACD,KAAK,CAACC;AADV,SAAP;AAGD,OAdD;AAeD,KAlDa;;AAAA,SAmDdO,WAnDc,GAmDA,MAAM;AAClB,WAAKV,QAAL,CAAc;AACZS,QAAAA,WAAW,EAAE,CADD;AAEZN,QAAAA,MAAM,EAAE;AAFI,OAAd;AAID,KAxDa;;AAEZ,SAAKD,KAAL,GAAa;AACXL,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAEDc,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAE5B,QAAIA,SAAS,CAACC,MAAV,KAAqB,KAAKC,KAAL,CAAWD,MAApC,EAA4C;AAC1C,WAAKjB,UAAL;AAED,KAHD,MAGO,IAAI,CAACgB,SAAS,CAACC,MAAf,EAAsB;AAC3BT,MAAAA,aAAa,CAAC,KAAKN,QAAN,CAAb;AACD;AACF;;AAaDiB,EAAAA,MAAM,GAAG;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACL,KAAKb,KAAL,CAAWL,IADN,MAAP;AAGD;;AAjCiC;;AA8DpC,eAAeJ,KAAf","sourcesContent":["import React from 'react'\n\nclass Timer extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      time: 0,\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n\n    if (prevProps.active !== this.props.active) {\n      this.startTimer()\n\n    } else if (!prevProps.active){\n      clearInterval(this.interval)\n    }\n  }\n\n  startTimer = () => {\n    let time = 0\n    this.interval = setInterval(() => {\n      this.setState({\n        time\n      })\n      time++;\n    }, 1000)\n\n  }\n\n  render() {\n    return <div > Time: {\n      this.state.time\n    } < /div>\n  }\n\n  handleClick = () => {\n    this.setState(state => {\n      if (state.status) {\n        clearInterval(this.timer);\n      } else {\n        const startTime = Date.now() - this.state.runningTime;\n        this.timer = setInterval(() => {\n          this.setState({\n            runningTime: Date.now() - startTime\n          });\n        });\n      }\n      return {\n        status: !state.status\n      };\n    });\n  };\n  handleReset = () => {\n    this.setState({\n      runningTime: 0,\n      status: false\n    });\n  };\n\n\n\n}\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}